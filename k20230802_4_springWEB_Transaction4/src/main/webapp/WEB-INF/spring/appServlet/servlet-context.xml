<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/images/**" location="/WEB-INF/images/" /> <!-- image -->
	<resources mapping="/css/**" location="/WEB-INF/css/" /> <!-- css -->
	<resources mapping="/js/**" location="/WEB-INF/js/" /> <!-- javascript -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.tjoeun.springWEB_Transaction" />
	
	<!-- DB 연결 정보 -->
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<beans:property name="username" value="tjoeunit"/>
		<beans:property name="password" value="0000"/>
	</beans:bean>
	
	<!-- DB 연결 -->
	<beans:bean name="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<!-- 트랜잭션 매니저 bean 설정 -->
	<beans:bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>	
	
	<!-- TransactionTemplate 클래스 bean 설정 => 내부 트랜잭션 -->
	<beans:bean name="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<beans:property name="transactionManager" ref="transactionManager"/>
		<!-- 트랜잭션 전파 속성을 지정한다. -->
		<beans:property name="propagationBehavior" value="2"/>
	</beans:bean>
	
	<!-- TransactionTemplate 클래스 bean 설정 => 외부 트랜잭션 -->
	<beans:bean name="transactionTemplate2" class="org.springframework.transaction.support.TransactionTemplate">
		<beans:property name="transactionManager" ref="transactionManager"/>
		<!-- 트랜잭션 전파 속성을 지정한다. -->
		<beans:property name="propagationBehavior" value="0"/>
	</beans:bean>
		
	<!-- TransactionDAO 클래스의 bean 설정 -->
	<beans:bean name="dao" class="com.tjoeun.dao.TransactionDAO">
		<beans:property name="template" ref="template"/>
		<!-- 내부 트랜잭션 초기화 -->
		<beans:property name="transactionTemplate" ref="transactionTemplate"/>
	</beans:bean>
	
	<!-- TransactionDAO 클래스의 bean 설정 -->
	<beans:bean name="service" class="com.tjoeun.service.TicketInsert">
		<beans:property name="dao" ref="dao"/>
		<!-- 외부 트랜잭션 초기화 -->
		<beans:property name="transactionTemplate2" ref="transactionTemplate2"/>
	</beans:bean>
	
</beans:beans>
